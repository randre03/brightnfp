{"ts":1377396967023,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"<?php\n/** Paypal Helper part of the PayPal IPN plugin.\n  *\n  * @author Nick Baker\n  * @link http://www.webtechnick.com\n  * @license MIT\n  */\nclass PaypalHelper extends AppHelper {\n\n  public $helpers = array('Html','Form');\n\n/**\n *  Setup the config based on the paypal_ipn_config in /Plugins/PaypalIpn/Config/paypal_ipn_config.php\n */\n\tpublic function __construct(View $View, $settings = array()){\n\t\tif(App::import(array('type' => 'File', 'name' => 'PaypalIpn.PaypalIpnConfig', 'file' => App::pluginPath('PaypalIpn') . 'Config' . DS . 'PaypalIpnConfig.php'))) {\n\t\t\t$this->config = new PaypalIpnConfig();\n\t\t} else {\n\t\t\t$this->config = new PaypalIpnConfig();\n\t\t}\n\t\tparent::__construct($View, $settings);\n\t}\n\n  /**\n    *  function button will create a complete form button to Pay Now, Donate, Add to Cart, or Subscribe using the paypal service.\n    *  Configuration for the button is in /config/paypal_ip_config.php\n    *\n    *  for this to work the option 'item_name' and 'amount' must be set in the array options or default config options.\n    *\n    *  Example:\n    *     $paypal->button('Pay Now', array('amount' => '12.00', 'item_name' => 'test item'));\n    *     $paypal->button('Subscribe', array('type' => 'subscribe', 'amount' => '60.00', 'term' => 'month', 'period' => '2'));\n    *     $paypal->button('Donate', array('type' => 'donate', 'amount' => '60.00'));\n    *     $paypal->button('Add To Cart', array('type' => 'addtocart', 'amount' => '15.00'));\n    *     $paypal->button('View Cart', array('type' => 'viewcart'));\n    *     $paypal->button('Unsubscribe', array('type' => 'unsubscribe'));\n    *     $paypal->button('Checkout', array(\n    *      'type' => 'cart',\n    *      'items' => array(\n    *         array('item_name' => 'Item 1', 'amount' => '120', 'quantity' => 2, 'item_number' => '1234'),\n    *         array('item_name' => 'Item 2', 'amount' => '50'),\n    *         array('item_name' => 'Item 3', 'amount' => '80', 'quantity' => 3),\n    *       )\n    *     ));\n    *  Test Example:\n    *     $paypal->button('Pay Now', array('test' => true, 'amount' => '12.00', 'item_name' => 'test item'));\n    *\n    * @access public\n    * @param String $title takes the title of the paypal button (default \"Pay Now\" or \"Subscribe\" depending on option['type'])\n    * @param Array $options takes an options array defaults to (configuration in /config/paypal_ipn_config.php)\n    *\n    *   helper_options:\n    *      test: true|false switches default settings in /config/paypal_ipn_config.php between settings and testSettings\n    *      type: 'paynow', 'addtocart', 'donate', 'unsubscribe', 'cart', or 'subscribe' (default 'paynow')\n    *\n    *    You may pass in api name value pairs to be passed directly to the paypal form link.  Refer to paypal.com for a complete list.\n    *    some paypal API examples:\n    *      amount: float value\n    *      notify_url: string url\n    *      item_name: string name of product.\n    *      etc...\n    */\n  public function button($title = null, $options = array()){\n    if(is_array($title)){\n      $options = $title;\n      $title = isset($options['label']) ? $options['label'] : null;\n    }\n    $defaults = (isset($options['test']) && $options['test']) ? $this->config->testSettings : $this->config->settings;\n    $options = array_merge($defaults, $options);\n    $options['type'] = (isset($options['type'])) ? $options['type'] : \"paynow\";\n\n    switch($options['type']){\n      case 'subscribe': //Subscribe\n        $options['cmd'] = '_xclick-subscriptions';\n        $default_title = 'Subscribe';\n        $options['no_note'] = 1;\n        $options['no_shipping'] = 1;\n        $options['src'] = 1;\n        $options['sra'] = 1;\n        $options = $this->__subscriptionOptions($options);\n        break;\n      case 'addtocart': //Add To Cart\n        $options['cmd'] = '_cart';\n        $options['add'] = '1';\n        $default_title = 'Add To Cart';\n        break;\n      case 'viewcart': //View Cart\n      \t$options['cmd'] = '_cart';\n      \t$options['display'] = '1';\n      \t$default_title = 'View Cart';\n      \tbreak;\n      case 'donate': //Doante\n        $options['cmd'] = '_donations';\n        $default_title = 'Donate';\n        break;\n      case 'unsubscribe': //Unsubscribe\n        $options['cmd'] = '_subscr-find';\n        $options['alias'] = $options['business'];\n        $default_title = 'Unsubscribe';\n        break;\n      case 'cart': //upload cart\n        $options['cmd'] = '_cart';\n        $options['upload'] = 1;\n        $default_title = 'Checkout';\n        $options = $this->__uploadCartOptions($options);\n        break;\n      default: //Pay Now\n        $options['cmd'] = '_xclick';\n        $default_title = 'Pay Now';\n        break;\n    }\n\n    $title = (empty($title)) ? $default_title : $title;\n    $retval = \"<form action='{$options['server']}/cgi-bin/webscr' method='post'><div class='paypal-form'>\";\n    unset($options['server']);\n    foreach($options as $name => $value){\n       $retval .= $this->__hiddenNameValue($name, $value);\n    }\n    $retval .= $this->__submitButton($title);\n\n    return $retval;\n  }\n\n  public function submit($title, $options) {\n    return $this->button($title, $options);\n  }\n\n  /**\n   *  __hiddenNameValue constructs the name value pair in a hidden input html tag\n   * @access private\n   * @param String name is the name of the hidden html element.\n   * @param String value is the value of the hidden html element.\n   * @access private\n   * @return Html form button and close form\n   */\n  private function __hiddenNameValue($name, $value){\n    return \"<input type='hidden' name='$name' value='$value' />\";\n  }\n\n  /**\n   *  __submitButton constructs the submit button from the provided text\n   * @param String text | text is the label of the submit button.  Can use plain text or image url.\n   * @access private\n   * @return Html form button and close form\n   */\n  private function __submitButton($text){\n    return \"</div>\" . $this->Form->end(array('label' => $text));\n  }\n\n  /**\n    * __subscriptionOptions conversts human readable subscription terms\n    * into paypal terms if need be\n    *  @access private\n    *  @param array options | human readable options into paypal API options\n    *     INT period //paypal api period of term, 2, 3, 1\n    *     String term //paypal API term //month, year, day, week\n    *     Float amount //paypal API amount to charge for perioud of term.\n    *  @return array options\n    */\n  private function __subscriptionOptions($options = array()){\n    //Period... every 1, 2, 3, etc.. Term\n    if(isset($options['period'])){\n      $options['p3'] = $options['period'];\n      unset($options['period']);\n    }\n    //Mount billed\n    if(isset($options['amount'])){\n      $options['a3'] = $options['amount'];\n      unset($options['amount']);\n    }\n    //Terms, Month(s), Day(s), Week(s), Year(s)\n    if(isset($options['term'])){\n      switch($options['term']){\n        case 'month': $options['t3'] = 'M'; break;\n        case 'year': $options['t3'] = 'Y'; break;\n        case 'day': $options['t3'] = 'D'; break;\n        case 'week': $options['t3'] = 'W'; break;\n        default: $options['t3'] = $options['term'];\n      }\n      unset($options['term']);\n    }\n\n    return $options;\n  }\n\n  /**\n    * __uploadCartOptions converts an array of items into paypal friendly name/value pairs\n    * @access private\n    * @param array of options that will be returned with proper paypal friendly name/value pairs for items\n    * @return array options\n    */\n  private function __uploadCartOptions($options = array()){\n    if(isset($options['items']) && is_array($options['items'])){\n      $count = 1;\n      foreach($options['items'] as $item){\n        foreach($item as $key => $value){\n          $options[$key.'_'.$count] = $value;\n        }\n        $count++;\n      }\n      unset($options['items']);\n    }\n    return $options;\n  }\n}"]],"start1":0,"start2":0,"length1":0,"length2":7835}]],"length":7835}
