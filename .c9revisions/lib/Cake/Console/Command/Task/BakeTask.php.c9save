{"ts":1377570345920,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"<?php\n/**\n * Base class for Bake Tasks.\n *\n * PHP 5\n *\n * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)\n * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)\n *\n * Licensed under The MIT License\n * For full copyright and license information, please see the LICENSE.txt\n * Redistributions of files must retain the above copyright notice.\n *\n * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)\n * @link          http://cakephp.org CakePHP(tm) Project\n * @since         CakePHP(tm) v 1.3\n * @license       http://www.opensource.org/licenses/mit-license.php MIT License\n */\n\nApp::uses('AppShell', 'Console/Command');\n\n/**\n * Base class for Bake Tasks.\n *\n * @package       Cake.Console.Command.Task\n */\nclass BakeTask extends AppShell {\n\n/**\n * Name of plugin\n *\n * @var string\n */\n\tpublic $plugin = null;\n\n/**\n * The db connection being used for baking\n *\n * @var string\n */\n\tpublic $connection = null;\n\n/**\n * Flag for interactive mode\n *\n * @var boolean\n */\n\tpublic $interactive = false;\n\n/**\n * Disable caching and enable debug for baking.\n * This forces the most current database schema to be used.\n *\n * @return void\n */\n\tpublic function startup() {\n\t\tConfigure::write('debug', 2);\n\t\tConfigure::write('Cache.disable', 1);\n\t\tparent::startup();\n\t}\n\n/**\n * Gets the path for output. Checks the plugin property\n * and returns the correct path.\n *\n * @return string Path to output.\n */\n\tpublic function getPath() {\n\t\t$path = $this->path;\n\t\tif (isset($this->plugin)) {\n\t\t\t$path = $this->_pluginPath($this->plugin) . $this->name . DS;\n\t\t}\n\t\treturn $path;\n\t}\n\n/**\n * Base execute method parses some parameters and sets some properties on the bake tasks.\n * call when overriding execute()\n *\n * @return void\n */\n\tpublic function execute() {\n\t\tforeach ($this->args as $i => $arg) {\n\t\t\tif (strpos($arg, '.')) {\n\t\t\t\tlist($this->params['plugin'], $this->args[$i]) = pluginSplit($arg);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (isset($this->params['plugin'])) {\n\t\t\t$this->plugin = $this->params['plugin'];\n\t\t}\n\t}\n\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":2066}]],"length":2066}
